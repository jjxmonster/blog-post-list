name: Deploy to Vercel

on:
  workflow_dispatch:
    inputs:
      deploy-vercel:
        type: boolean
        description: Enable Vercel deployment
        default: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Install dependencies
        run: npm ci

      - name: Build app
        run: npm run build

      - name: Install Vercel CLI
        if: ${{ inputs.deploy-vercel }}
        run: npm install --global vercel@canary

      - name: Pull Vercel Environment Information
        if: ${{ inputs.deploy-vercel }}
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build for Vercel
        if: ${{ inputs.deploy-vercel }}
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        if: ${{ inputs.deploy-vercel }}
        run: |
          DEPLOY_OUTPUT="$(vercel deploy --token=${{ secrets.VERCEL_TOKEN }})"
          DEPLOY_URL=$(echo "$DEPLOY_OUTPUT" | grep http | tail -n 1)
          echo "DEPLOY_URL=$DEPLOY_URL" >> $GITHUB_ENV
        shell: bash

      - name: Run E2E tests
        if: ${{ inputs.deploy-vercel }}
        run: npm run test:e2e
        env:
          PLAYWRIGHT_BASE_URL: ${{ env.DEPLOY_URL }}
